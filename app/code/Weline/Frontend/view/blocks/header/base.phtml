<?php
/**@var \Weline\Framework\View\Template $this */
/**@var \Weline\Backend\Block\ThemeConfig $themeConfig */
$themeConfig = \Weline\Framework\Manager\ObjectManager::getInstance(\Weline\Backend\Block\ThemeConfig::class);
$host = $this->request->getBaseHost() . '/';
//$http_host                               = explode('.', $this->request->getServer('HTTP_HOST'));
//$domain                             = array_pop($http_host);
//$domain                             = array_pop($http_host) .'.'. $domain;
/**@var \Weline\Backend\Session\BackendSession $session */
$session = \Weline\Framework\App\Env::getInstance(\Weline\Backend\Session\BackendSession::class);
$user_id = $session->getLoginUserID();
$base_host = $this->request->getPrePath();
$base_router = $this->request->getRouterData('router');
$current_module = $this->request->getModuleName();
$env_model = \Weline\Framework\App\Env::get('deploy');
$api_host = $this->request->getUrlBuilder()->getApiUrl('', [], false);
$theme_path = str_replace('\\', '/', \Weline\Framework\App\Env::getInstance()->getTheme()['path']);
$env_model_media_base_path_template = $host . (DEV ? '/{module}/view/statics/{path}' : '/static/' . $theme_path . '/{module}/view/statics/{path}');
$token = \Weline\Framework\Security\Token::create('csrf', 16, 600);
?>
<!--加载requirejs-->
<?php if (DEV) : ?>
    <!--    <script src="@static(Weline_Frontend::/libs/requirejs/2.3.6/requirejs.js)"></script>-->
<?php
else:
    ?>
    <!--    <script src="@static(Weline_Frontend::/libs/requirejs/2.3.6/requirejs.min.js)"></script>-->
<?php
endif;
?>
<!--加载require常用js模块-->
<!--<script src='@static(Weline_Frontend::base/require.configs.js)'></script>-->
<!--加载require常用js模块-->
<js>Weline_Frontend::/libs/jquery/3.6.0/jquery.js</js>
<script>
    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': '{{token}}'
        }
    });
    $.ajaxPrefilter(function (options) {
        // 检测url是否有参数，并给所有url加上isAjax参数
        if (options.url.indexOf('?') < 0) {
            options.url += '?isAjax=1';
        } else {
            options.url += '&isAjax=1';
        }
    });
</script>
<w:js>Weline_Frontend::/js/cookie.js</w:js>
<script>
    window.site = {
        user_id: '{{user_id}}',
        module: '{{current_module}}',
        host: '{{host}}',
        env_model: '{{env_model}}',
        env_model_media_base_path_template: '{{env_model_media_base_path_template}}',
        base_host: '{{base_host}}',
        currency: '{{$_SERVER.WELINE_USER_CURRENCY}}',
        lang: '{{$_SERVER.WELINE_USER_LANG}}',
        api_host: '{{api_host}}',
        base_router: '{{base_router}}',
        i18n: <?= json_encode(Weline\Framework\Phrase\Parser::getWords())?>,
        themeConfig: <?=json_encode($themeConfig->getThemeConfig()) ?? '{}';?>,
    }
    window.path = (path) => {
        path = path.replace('*', '{{base_router}}')
        if (path.indexOf('//') === 0) {
            path = path.slice(2)
        }
        if (path.indexOf('/') === 0) {
            path = path.slice(1)
        }
        return path;
    }
    window.media = (path, module = '{{current_module}}') => {
        return '{{env_model_media_base_path_template}}'.replace('{path}', window.path(path)).replace('{module}', module.replace('_', '/'))
    }

    window.url = (path) => {
        return '{{host}}' + window.path(path);
    }
    window.frontend_url = (path) => {
        return '{{host}}' + window.path(path);
    }
    window.api = (path) => {
        return '{{api_host}}' + window.path(path);
    }
    window.frontend_api = (path) => {
        return '{{api_host}}' + window.path(path);
    }

    function app_path(path) {
        let origin_path = path
        window.site.computePath = [];
        if (window.site.computePath[origin_path]) {
            return window.site.computePath[origin_path]
        }
        // 提取类似http://localhost:8080/的host
        if (path.indexOf('://') > 0) {
            let hosts = path.split('://')
            let host_0 = hosts[0] + '://'
            let host_1 = hosts[1]
            if (host_1.indexOf('/') > 0) {
                let host_1s = host_1.split('/')
                host_0 += host_1s.shift()
                let host_1s_1 = host_1s[0]
                if (host_1s_1) {
                    if (getCookie('WELINE_WEBSITE_CODE') && host_1s_1.startsWith(getCookie('WELINE_WEBSITE_CODE'))) {
                        host_1s.shift()
                        host_1s_1 = host_1s[0]
                    }
                    if ('{{area}}' === host_1s_1) {
                        host_1s.shift()
                        host_1s_1 = host_1s[0]
                    } else if ('{{api_area}}' === host_1s_1) {
                        host_1s.shift()
                        host_1s_1 = host_1s[0]
                    } else if ('{{api_admin_area}}' === host_1s_1) {
                        host_1s.shift()
                        host_1s_1 = host_1s[0]
                    }
                    if (getCookie('WELINE_USER_CURRENCY') === host_1s_1) {
                        host_1s.shift()
                        host_1s_1 = host_1s[0]
                    }
                    if (getCookie('WELINE_USER_LANG') === host_1s_1) {
                        host_1s.shift()
                    }
                }
                path = host_0 + '/' + host_1s.join('/')
            } else {
                path = host_1
            }
        }
        window.site.computePath[origin_path] = path;
        return window.site.computePath[origin_path]
    }

    function inject_path(path, code = '', type = '') {
        if (!path) {
            throw new Error('@lang{JS: inject_path函数path路径不允许为空！}')
        }
        let pre_path = getCookie('WELINE_WEBSITE_URL');
        // 网站
        if (path.startsWith(getCookie('WELINE_WEBSITE_URL'))) {
            path = path.replace(getCookie('WELINE_WEBSITE_URL'), '');
        } else {
            path = path.replace(window.site.base_router, '');
        }
        if (path.startsWith('/' + getCookie('WELINE_WEBSITE_CODE'))) {
            path = path.replace('/' + getCookie('WELINE_WEBSITE_CODE'), '');
        }
        if ('website' === type && code) {
            pre_path = code;
        }
        pre_path = decodeURIComponent(pre_path);
        if (pre_path.endsWith('/')) {
            pre_path = pre_path.slice(0, -1);
        }
        // 区域
        if (path.startsWith('/{{area}}')) {
            if ('area' === type && code) {
                path = path.replace('/{{area}}', '');
                pre_path += '/' + code;
            } else {
                path = path.replace('/{{area}}', '');
                pre_path += '/{{area}}';
            }
        } else {
            if ('area' === type && code) {
                pre_path += '/' + code;
            } else {
                pre_path += '/{{area}}';
            }
        }
        // 币种
        if (path.startsWith('/' + window.site.currency)) {
            if ('currency' === type && code) {
                path = path.replace('/' + window.site.currency, '');
                pre_path += '/' + code;
            } else {
                path = path.replace('/' + window.site.currency, '');
                pre_path += '/' + window.site.currency;
            }
        } else {
            if ('currency' === type && code) {
                pre_path += '/' + code;
            } else {
                pre_path += '/' + window.site.currency;
            }
        }
        // 语言
        if (path.startsWith('/{{local.code}}')) {
            if ('lang' === type && code) {
                path = path.replace('/{{local.code}}', '');
                pre_path += '/' + code;
            } else {
                path = path.replace('/{{local.code}}', '');
                pre_path += '/{{local.code}}';
            }
        } else {
            if ('lang' === type && code) {
                pre_path += '/' + code;
            } else {
                pre_path += '/{{local.code}}';
            }
        }
        return pre_path + path;
    }

    function select_language(lang) {
        // URL结构 [website_url]/[area]/[currency]/[lang]/[path]
        setCookie('WELINE_USER_LANG', lang, 7, {path: '/{{area}}', domain: window.location.host});
        window.location.href = inject_path(window.location.pathname, lang, 'lang') + window.location.search
    }

    function select_currency(currency_code) {
        // URL结构 [website_url]/[area]/[currency]/[lang]/[path]
        setCookie('WELINE_USER_CURRENCY', currency_code, 7, {path: '/', domain: window.location.host});
        window.location.href = inject_path(window.location.pathname, currency_code, 'currency') + window.location.search
    }

    function select_site(url) {
        // URL结构 [website_url]/[area]/[currency]/[lang]/[path]
        setCookie('WELINE_WEBSITE_URL', url, 7, {path: '/', domain: window.location.host});
        window.location.href = inject_path(window.location.pathname, url, 'website') + window.location.search
    }

    /**
     * 通用打印函数
     * @param data
     */
    function p(data) {
        console.log(data)
    }

    /**
     * 通用打印函数
     * @param data
     */
    function d(data) {
        console.log(data)
    }

    /**
     * 翻译函数
     * @param phrase
     * @param arguments {*}
     * @returns {*}
     * @private
     */
    function phrase(phrase, arguments = null) {
        if (window.site.i18n[phrase] !== undefined) {
            phrase = window.site.i18n[phrase]
        } else {
            window.site.i18n[phrase] = phrase
        }
        if (arguments) {
            switch (arguments.constructor) {
                case String:
                    phrase = phrase.replace(/%1/g, arguments)
                    break;
                case Object:
                    for (let argument_key in arguments) {
                        let arg = arguments[argument_key]
                        let regExp = new RegExp(eval('/%' + argument_key + '/g'));
                        phrase = phrase.replace(regExp, arg)
                    }
                    break;
                case Array:
                    for (let argument_key in arguments) {
                        let arg = arguments[argument_key]
                        argument_key = 1 + parseInt(argument_key)
                        let regExp = new RegExp(eval('/%' + argument_key + '/g'));
                        phrase = phrase.replace(regExp, arg)
                    }
                    break;
            }
        }
        return phrase
    }

    /**
     * 翻译短语函数
     * @param word
     * @param arguments {*}
     * @returns {*}
     * @private
     */
    function __(word, arguments = null) {
        return phrase(word, arguments)
    }

    /**
     * 翻译函数
     * @param word
     * @param arguments {*}
     * @returns {*}
     * @private
     */
    function lang(word, arguments = null) {
        return phrase(word, arguments)
    }

</script>
<!--加载配置页头-->
<?php
echo $this->getHeader()->getHtml();
?>
<!--后台配置头部-->
<hook>head</hook>
